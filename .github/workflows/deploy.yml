name: deploy

on:
  push:

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: debug
        run: echo ${{ github.event.ref }}
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: "13.x"

      - name: Get yarn cache
        id: yarn-cache
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          yarn cache dir

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v1
        with:
          path: "node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install
        run: |
          yarn cache dir
          yarn

      - name: generate
        run: |
          yarn run md
          yarn run generate

      - name: upload dist
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  create-release:
    runs-on: ubuntu-latest
    needs: generate
    if: github.event.ref == 'refs/heads/master'
    steps:
      - name: download dist
        uses: actions/download-artifact@v1
        with:
          name: dist

      - name: zip
        run: zip -r dist.zip ./dist

      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v2
        with:
          token: ${{secrets.github_token}}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.buildnumber.outputs.build_number }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip

      - name: Trigger Webhook to CoreServer
        run: curl https://ku-unplugged.net/deploy.php?token=${{ secrets.CORESERVER_DEPLOY_KEY }}

  deploy-to-firebase:
    runs-on: ubuntu-latest
    needs: generate
    steps:
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: unplugged-hp
